#lang scheme
(define (make-account balance password)
  (define (password? x)
    (eq? x password))
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch pw m)
    (cond ((not (password? pw)) (lambda (x) "Incorrect password"))
          ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)

(define (make-joint acct pass new-pass)
  (define (password? pw)
    (eq? pw new-pass))
  (define (withdraw amount)
    ((acct pass 'withdraw) amount))
  (define (deposit amount)
    ((acct pass 'deposit) amount))
  (define (dispatch pw m)
    (cond ((not (password? pw)) (lambda (x) "Incorrect password"))
          ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-JOINT"
                       m))))
  dispatch)